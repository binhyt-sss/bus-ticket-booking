const Ticket = require("../models/ticketModel");

const ticketController = {
  findTicket: async (req, res) => {
    try {
      const { mave, makh } = req.query;

      if (!mave || !makh) {
        return res.status(400).json({ message: "Vui l√≤ng nh·∫≠p MAVE v√† MAKH" });
      }

      const data = await Ticket.findTicket(mave, makh);

      if (data.length === 0) {
        return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y v√©" });
      }

      res.status(200).json(data);
    } catch (error) {
      res.status(500).json({ message: "L·ªói server", error });
    }
  },
  async cancelTicket(req, res) {
    const { mave } = req.params;

    try {
        console.log(`üîç H·ªßy v√©: MAVE = ${mave}`);

        // Ki·ªÉm tra v√© c√≥ t·ªìn t·∫°i kh√¥ng
        const ticket = await Ticket.getTicketById(mave);
        if (!ticket) {
            console.log("‚ùå V√© kh√¥ng t·ªìn t·∫°i!");
            return res.status(404).json({ error: "V√© kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã h·ªßy." });
        }

        // X√≥a chi ti·∫øt v√© tr∆∞·ªõc
        await Ticket.deleteTicketDetails(mave);
        console.log("‚úÖ ƒê√£ x√≥a chi ti·∫øt v√©!");

        // X√≥a v√© ch√≠nh
        await Ticket.deleteTicket(mave);
        console.log("‚úÖ ƒê√£ x√≥a v√© th√†nh c√¥ng!");

        res.json({ success: true, message: "H·ªßy v√© th√†nh c√¥ng!" });
    } catch (error) {
        console.error("‚ùå L·ªói khi h·ªßy v√©:", error);
        res.status(500).json({ error: "L·ªói khi h·ªßy v√©.", details: error.message });
    }
}
};

module.exports = ticketController;
